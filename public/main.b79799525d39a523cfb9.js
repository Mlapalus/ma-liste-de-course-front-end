(self.webpackChunkma_liste_de_course_front_end=self.webpackChunkma_liste_de_course_front_end||[]).push([[179],{160:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var r=n(15),a=n.n(r),i=n(645),c=n.n(i)()(a());c.push([e.id,".bg-grey-light{background-color:#c2bdbd}.bg-grey-dark{background-color:gray}#title{font-size:0.9rem}#bucket{font-size:0.8rem;margin-bottom:0}.shop{display:flex;flex-direction:row}body{width:100vw;height:10vh;font-size:16px}\n","",{version:3,sources:["webpack://./src/scss/partials/_navBar.scss","webpack://./src/scss/partials/_shop.scss","webpack://./src/scss/main.scss"],names:[],mappings:"AAIA,eACE,wBAL+B,CAMhC,cAEC,qBAPiB,CAQlB,OAGC,gBAAiB,CAClB,QAGC,gBAAiB,CACjB,eAAgB,CACjB,MChBC,YAAa,CACb,kBAAmB,CCArB,KACE,WAAY,CACZ,WAAY,CACZ,cAAe",sourcesContent:["$grey-light :  rgb(194, 189, 189);\n$gray-dark :   gray;\n\n\n.bg-grey-light {\n  background-color: $grey-light;\n}\n.bg-grey-dark {\n  background-color: $gray-dark;\n}\n\n#title {\n  font-size: 0.9rem;\n}\n\n#bucket {\n  font-size: 0.8rem;\n  margin-bottom: 0;\n}","\n.shop{\n  display: flex;\n  flex-direction: row;\n}",'@import "./partials/navBar";\n@import "./partials/shop";\n\nbody {\n  width: 100vw;\n  height: 10vh;\n  font-size: 16px;\n}\n'],sourceRoot:""}]);const o=c},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(a[c]=!0)}for(var o=0;o<e.length;o++){var s=[].concat(e[o]);r&&a[s[0]]||(n&&(s[2]?s[2]="".concat(n," and ").concat(s[2]):s[2]=n),t.push(s))}},t}},15:e=>{"use strict";function t(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,a=!1,i=void 0;try{for(var c,o=e[Symbol.iterator]();!(r=(c=o.next()).done)&&(n.push(c.value),!t||n.length!==t);r=!0);}catch(e){a=!0,i=e}finally{try{r||null==o.return||o.return()}finally{if(a)throw i}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return n(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n=t(e,4),r=n[1],a=n[3];if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),o="/*# ".concat(c," */"),s=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[r].concat(s).concat([o]).join("\n")}return[r].join("\n")}},379:(e,t,n)=>{"use strict";var r,a=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},i=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),c=[];function o(e){for(var t=-1,n=0;n<c.length;n++)if(c[n].identifier===e){t=n;break}return t}function s(e,t){for(var n={},r=[],a=0;a<e.length;a++){var i=e[a],s=t.base?i[0]+t.base:i[0],d=n[s]||0,l="".concat(s," ").concat(d);n[s]=d+1;var u=o(l),m={css:i[1],media:i[2],sourceMap:i[3]};-1!==u?(c[u].references++,c[u].updater(m)):c.push({identifier:l,updater:f(m,t),references:1}),r.push(l)}return r}function d(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var a=n.nc;a&&(r.nonce=a)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var c=i(e.insert||"head");if(!c)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");c.appendChild(t)}return t}var l,u=(l=[],function(e,t){return l[e]=t,l.filter(Boolean).join("\n")});function m(e,t,n,r){var a=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=u(t,a);else{var i=document.createTextNode(a),c=e.childNodes;c[t]&&e.removeChild(c[t]),c.length?e.insertBefore(i,c[t]):e.appendChild(i)}}function p(e,t,n){var r=n.css,a=n.media,i=n.sourceMap;if(a?e.setAttribute("media",a):e.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var h=null,g=0;function f(e,t){var n,r,a;if(t.singleton){var i=g++;n=h||(h=d(t)),r=m.bind(null,n,i,!1),a=m.bind(null,n,i,!0)}else n=d(t),r=p.bind(null,n,t),a=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else a()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=a());var n=s(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var a=o(n[r]);c[a].references--}for(var i=s(e,t),d=0;d<n.length;d++){var l=o(n[d]);0===c[l].references&&(c[l].updater(),c.splice(l,1))}n=i}}}},982:(e,t,n)=>{"use strict";var r=n(379),a=n.n(r),i=n(160),c={insert:"head",singleton:!1};a()(i.Z,c);i.Z.locals;let o={1:{id:1,name:"Leclerc",img:"https://via.placeholder.com/60/0000FF/FFFFFF?Text=LOGO"},2:{id:2,name:"Auchan",img:"https://via.placeholder.com/60/0000FF/FFFFFF?Text=LOGO"},3:{id:3,name:"InterMarché",img:"https://via.placeholder.com/60/0000FF/FFFFFF?Text=LOGO"},4:{id:4,name:"Careffour",img:"https://via.placeholder.com/60/0000FF/FFFFFF?Text=LOGO"},5:{id:5,name:"Franprix",img:"https://via.placeholder.com/60/0000FF/FFFFFF?Text=LOGO"},6:{id:6,name:"Lidl",img:"https://via.placeholder.com/60/0000FF/FFFFFF?Text=LOGO"}};const s=()=>new Promise(((e,t)=>{if(!o)return setTimeout((()=>t(new Error("Shps not found"))),250);setTimeout((()=>e(Object.values(o))),250)}));class d{static createSection(e,t){const n=document.createElement("section");return n.classList.add("shop"),n.classList.add("m-3"),n.classList.add("bg-grey-light"),n.appendChild(e),n.appendChild(t),n}static createDivImage(e){const t=document.createElement("div");return t.innerHTML='<img src="'+e+'" alt="photo">',t}static createDivTitle(e){const t=document.createElement("div");return t.appendChild(this.createH2(e)),t}static createH2(e){const t=document.createElement("h2");t.innerText=e;const n=document.createElement("a");return n.setAttribute("href","shop.html"),n.setAttribute("id",e),n.appendChild(t),n}}const l={quantity:0,add(){this.quantity+=1,console.log(this.quantity)},removeOne(){this.quantity-=1},removeAll(){this.quantity=0},get(){return this.quantity}};class u{static display(){const e=document.getElementById("container-basket"),t=document.createElement("h1");t.innerText="C'est le panier : "+sessionStorage.getItem("page");const n=document.createElement("h2");n.setAttribute("id","quantity"),n.innerText="Quantité dans le panier: "+sessionStorage.getItem("quantity"),e.appendChild(t),e.appendChild(n)}static add(){l.add(),console.log(l.get().toString()),sessionStorage.setItem("quantity",l.get().toString()),document.getElementById("quantity").innerText="Quantité dans le panier: "+sessionStorage.getItem("quantity")}}let m={1:{id:1,name:"Céréales",img:"https://via.placeholder.com/60/0000FF/FFFFFF?Text=LOGO",price:5.4,nutriscore:"B"},2:{id:2,name:"Nutella",img:"https://via.placeholder.com/60/0000FF/FFFFFF?Text=LOGO",price:4.5,nutriscore:"E"},3:{id:3,name:"Bananes",img:"https://via.placeholder.com/60/0000FF/FFFFFF?Text=LOGO",price:1.3,nutriscore:"C"},4:{id:4,name:"Pates",img:"https://via.placeholder.com/60/0000FF/FFFFFF?Text=LOGO",price:1.1,nutriscore:"C"},5:{id:5,name:"Riz",img:"https://via.placeholder.com/60/0000FF/FFFFFF?Text=LOGO",price:.9,nutriscore:"B"},6:{id:6,name:"Poulet roti",img:"https://via.placeholder.com/60/0000FF/FFFFFF?Text=LOGO",price:5.7,nutriscore:"C"}};const p=()=>new Promise(((e,t)=>{if(!m)return setTimeout((()=>t(new Error("Products not found"))),150);setTimeout((()=>e(Object.values(m))),250)}));class h{static createSection(e,t,n){const r=document.createElement("section");return r.classList.add("shop"),r.classList.add("m-3"),r.classList.add("bg-grey-light"),r.appendChild(e),r.appendChild(t),r.appendChild(n),r}static createDivImage(e){const t=document.createElement("div");return t.innerHTML='<img src="'+e+'" alt="photo">',t}static createDivProduct(e){const t=document.createElement("div");return t.appendChild(this.createH2(e.name)),t.appendChild(this.createH4("Nutriscore : "+e.nutriscore)),t}static createH2(e){const t=document.createElement("h2");return t.innerText=e,t}static createH4(e){const t=document.createElement("h6");return t.innerText=e,t}static createButton(e){const t=document.createElement("button");return t.setAttribute("id",e),t.value=e,t.innerText="Ajouter",t}}let g=sessionStorage.getItem("page")||"homepage";(class{static displayNavbar(){document.getElementById("header").appendChild(class{static createNav(){const e=document.createElement("nav");return e.classList.add("nav"),e.classList.add("navbar"),e.classList.add("p-2"),e.classList.add("bg-grey-light"),e.appendChild(this.createTitleDiv()),e.appendChild(this.createBucketDiv()),e}static createBucketDiv(){const e=document.createElement("div");return e.classList.add("p-2"),e.classList.add("bg-grey-dark"),e.appendChild(this.createBucketH2()),e}static createBucketH2(){const e=document.createElement("h2");e.setAttribute("id","bucket"),e.innerText="PANIER";const t=document.createElement("a");return t.setAttribute("href","basket.html"),t.appendChild(e),t}static createTitleH1(){const e=document.createElement("h1");e.setAttribute("id","title"),e.innerText="MA LISTE DE COURSE";const t=document.createElement("a");return t.setAttribute("href","index.html"),t.appendChild(e),t}static createTitleDiv(){const e=document.createElement("div");return e.classList.add("p-1"),e.appendChild(this.createTitleH1()),e}}.createNav()),this.observer()}static observer(){document.getElementById("bucket").addEventListener("click",(()=>{sessionStorage.setItem("page","bucket")}));document.getElementById("title").addEventListener("click",(()=>{sessionStorage.setItem("page","homepage")}))}}).displayNavbar(),(e=>{"homepage"==e?class{static async displayShops(){const e=await s();for(let t=0;t<e.length;t++)document.getElementById("container").appendChild(this.createShop(e[t])),this.observer(e[t].name)}static createShop(e){const t=d.createDivImage(e.img),n=d.createDivTitle(e.name);return d.createSection(t,n)}static observer(e){console.log(e),document.getElementById(e).addEventListener("click",(()=>{sessionStorage.setItem("page",e)}))}}.displayShops():"bucket"==e?u.display():class{static async display(){this.createTitle();const e=await p();for(let t=0;t<e.length;t++)document.getElementById("container-shop").appendChild(this.createProduct(e[t])),this.observer(e[t].name)}static createTitle(){const e=document.createElement("h1");e.innerText="Bienvenu chez "+sessionStorage.getItem("page"),document.getElementById("container-shop").appendChild(e)}static createProduct(e){const t=h.createDivImage(e.img),n=h.createDivProduct(e),r=h.createButton(e.name);return h.createSection(t,n,r)}static observer(e){document.getElementById(e).addEventListener("click",(()=>{console.log(e),u.add()}))}}.display()})(g),class{static display(){const e=document.getElementById("footer"),t=document.createElement("h3");t.innerText="Ceci est le footer",e.appendChild(t)}}.display()}},0,[[982,666]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,